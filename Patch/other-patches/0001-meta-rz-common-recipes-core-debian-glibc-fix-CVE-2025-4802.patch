commit 9e2f5de62f4c29ff24ad88b09dce34f931391a8e
Author: Linh Hua <linh.hua.jc@renesas.com>
Date:   Tue Jul 15 14:06:36 2025 +0700

    meta-rz-common: recipes-{core,debian}: glibc: fix CVE-2025-4802
    
    Update glibc to versions that include the upstream fix:
    Fix untrusted LD_LIBRARY_PATH env var vulnerability (CVE-2025-4802).
    - buster: 2.28-10+deb10u5
    - bullseye: 2.31-13+deb11u13
    
    Signed-off-by: Linh Hua <linh.hua.jc@renesas.com>

diff --git a/meta-rz-common/conf/machine/include/cip-core.inc b/meta-rz-common/conf/machine/include/cip-core.inc
index 18403032..1ba945a8 100644
--- a/meta-rz-common/conf/machine/include/cip-core.inc
+++ b/meta-rz-common/conf/machine/include/cip-core.inc
@@ -36,3 +36,6 @@ RDEPENDS_adduser_append_debian = "perl"
 # Using the package versions provided in the security update mirror
 # is now necessary to pull updates by Debian LTS
 DEBIAN_SECURITY_UPDATE_MIRROR ?= "https://security.debian.org/debian-security/pool/updates"
+
+# ELTS (Extended LTS) mirror for packages with long-term maintenance
+DEBIAN_ELTS_MIRROR ?= "https://deb.freexian.com/extended-lts/pool"
diff --git a/meta-rz-common/recipes-core/glibc/glibc/0001-elf-Ignore-LD_LIBRARY_PATH-and-debug-env-var-for-set.patch b/meta-rz-common/recipes-core/glibc/glibc/0001-elf-Ignore-LD_LIBRARY_PATH-and-debug-env-var-for-set.patch
new file mode 100644
index 00000000..1e7c61de
--- /dev/null
+++ b/meta-rz-common/recipes-core/glibc/glibc/0001-elf-Ignore-LD_LIBRARY_PATH-and-debug-env-var-for-set.patch
@@ -0,0 +1,83 @@
+From 57cf80289fb86bbb86850b0637911b5951c06091 Mon Sep 17 00:00:00 2001
+From: Linh Hua <linh.hua.jc@renesas.com>
+Date: Thu, 10 Jul 2025 17:28:00 +0700
+Subject: [PATCH 1/2] elf: Ignore LD_LIBRARY_PATH and debug env var for setuid
+ for static
+
+It mimics the ld.so behavior.
+
+(cherry picked from commit 5451fa962cd0a90a0e2ec1d8910a559ace02bba0)
+
+Signed-off-by: Linh Hua <linh.hua.jc@renesas.com>
+---
+ elf/dl-support.c | 40 ++++++++++++++++++++--------------------
+ 1 file changed, 20 insertions(+), 20 deletions(-)
+
+diff --git a/elf/dl-support.c b/elf/dl-support.c
+index 7704c101c5..f766c83144 100644
+--- a/elf/dl-support.c
++++ b/elf/dl-support.c
+@@ -312,8 +312,6 @@ _dl_non_dynamic_init (void)
+   _dl_main_map.l_phdr = GL(dl_phdr);
+   _dl_main_map.l_phnum = GL(dl_phnum);
+ 
+-  _dl_verbose = *(getenv ("LD_WARN") ?: "") == '\0' ? 0 : 1;
+-
+   /* Set up the data structures for the system-supplied DSO early,
+      so they can influence _dl_init_paths.  */
+   setup_vdso (NULL, NULL);
+@@ -321,24 +319,6 @@ _dl_non_dynamic_init (void)
+   /* With vDSO setup we can initialize the function pointers.  */
+   setup_vdso_pointers ();
+ 
+-  /* Initialize the data structures for the search paths for shared
+-     objects.  */
+-  _dl_init_paths (getenv ("LD_LIBRARY_PATH"));
+-
+-  /* Remember the last search directory added at startup.  */
+-  _dl_init_all_dirs = GL(dl_all_dirs);
+-
+-  _dl_lazy = *(getenv ("LD_BIND_NOW") ?: "") == '\0';
+-
+-  _dl_bind_not = *(getenv ("LD_BIND_NOT") ?: "") != '\0';
+-
+-  _dl_dynamic_weak = *(getenv ("LD_DYNAMIC_WEAK") ?: "") == '\0';
+-
+-  _dl_profile_output = getenv ("LD_PROFILE_OUTPUT");
+-  if (_dl_profile_output == NULL || _dl_profile_output[0] == '\0')
+-    _dl_profile_output
+-      = &"/var/tmp\0/var/profile"[__libc_enable_secure ? 9 : 0];
+-
+   if (__libc_enable_secure)
+     {
+       static const char unsecure_envvars[] =
+@@ -361,6 +341,26 @@ _dl_non_dynamic_init (void)
+ #endif
+     }
+ 
++  _dl_verbose = *(getenv ("LD_WARN") ?: "") == '\0' ? 0 : 1;
++
++  /* Initialize the data structures for the search paths for shared
++     objects.  */
++  _dl_init_paths (getenv ("LD_LIBRARY_PATH"));
++
++  /* Remember the last search directory added at startup.  */
++  _dl_init_all_dirs = GL(dl_all_dirs);
++
++  _dl_lazy = *(getenv ("LD_BIND_NOW") ?: "") == '\0';
++
++  _dl_bind_not = *(getenv ("LD_BIND_NOT") ?: "") != '\0';
++
++  _dl_dynamic_weak = *(getenv ("LD_DYNAMIC_WEAK") ?: "") == '\0';
++
++  _dl_profile_output = getenv ("LD_PROFILE_OUTPUT");
++  if (_dl_profile_output == NULL || _dl_profile_output[0] == '\0')
++    _dl_profile_output
++      = &"/var/tmp\0/var/profile"[__libc_enable_secure ? 9 : 0];
++
+ #ifdef DL_PLATFORM_INIT
+   DL_PLATFORM_INIT;
+ #endif
+-- 
+2.25.1
+
diff --git a/meta-rz-common/recipes-core/glibc/glibc/0002-elf-Test-case-for-bug-32976-CVE-2025-4802.patch b/meta-rz-common/recipes-core/glibc/glibc/0002-elf-Test-case-for-bug-32976-CVE-2025-4802.patch
new file mode 100644
index 00000000..6b80a9a0
--- /dev/null
+++ b/meta-rz-common/recipes-core/glibc/glibc/0002-elf-Test-case-for-bug-32976-CVE-2025-4802.patch
@@ -0,0 +1,165 @@
+From 611ceeaa398ff4d3be80170613682358e92aa377 Mon Sep 17 00:00:00 2001
+From: Linh Hua <linh.hua.jc@renesas.com>
+Date: Thu, 10 Jul 2025 17:56:33 +0700
+Subject: [PATCH 2/2] elf: Test case for bug 32976 (CVE-2025-4802)
+
+Check that LD_LIBRARY_PATH is ignored for AT_SECURE statically
+linked binaries, using support_capture_subprogram_self_sgid.
+
+(cherry picked from commit d8f7a79335b0d861c12c42aec94c04cd5bb181e2)
+
+Signed-off-by: Linh Hua <linh.hua.jc@renesas.com>
+---
+ elf/Makefile              |   4 ++
+ elf/tst-dlopen-sgid-mod.c |   1 +
+ elf/tst-dlopen-sgid.c     | 104 ++++++++++++++++++++++++++++++++++++++
+ 3 files changed, 109 insertions(+)
+ create mode 100644 elf/tst-dlopen-sgid-mod.c
+ create mode 100644 elf/tst-dlopen-sgid.c
+
+diff --git a/elf/Makefile b/elf/Makefile
+index f9646f9c8c..1135bc8bb4 100644
+--- a/elf/Makefile
++++ b/elf/Makefile
+@@ -153,6 +153,7 @@ endif
+ 
+ tests-static-normal := tst-leaks1-static tst-array1-static tst-array5-static \
+ 	       tst-dl-iter-static \
++	       tst-dlopen-sgid \
+ 	       tst-tlsalign-static tst-tlsalign-extern-static \
+ 	       tst-linkall-static tst-env-setuid tst-env-setuid-tunables
+ tests-static-internal := tst-tls1-static tst-tls2-static \
+@@ -262,6 +263,7 @@ modules-names = testobj1 testobj2 testobj3 testobj4 testobj5 testobj6 \
+ 		$(modules-execstack-$(have-z-execstack)) \
+ 		tst-dlopenrpathmod tst-deep1mod1 tst-deep1mod2 tst-deep1mod3 \
+ 		tst-dlmopen1mod tst-auditmod1 \
++		tst-dlopen-sgid-mod \
+ 		unload3mod1 unload3mod2 unload3mod3 unload3mod4 \
+ 		unload4mod1 unload4mod2 unload4mod3 unload4mod4 \
+ 		unload6mod1 unload6mod2 unload6mod3 \
+@@ -1699,3 +1701,5 @@ LDFLAGS-tst-dlopen-nodelete-reloc-mod17.so = -Wl,--no-as-needed
+ 
+ $(objpfx)tst-ldconfig-ld_so_conf-update.out: $(objpfx)tst-ldconfig-ld-mod.so
+ $(objpfx)tst-ldconfig-ld_so_conf-update: $(libdl)
++
++$(objpfx)tst-dlopen-sgid.out: $(objpfx)tst-dlopen-sgid-mod.so
+diff --git a/elf/tst-dlopen-sgid-mod.c b/elf/tst-dlopen-sgid-mod.c
+new file mode 100644
+index 0000000000..5eb79eef48
+--- /dev/null
++++ b/elf/tst-dlopen-sgid-mod.c
+@@ -0,0 +1 @@
++/* Opening this object should not succeed.  */
+diff --git a/elf/tst-dlopen-sgid.c b/elf/tst-dlopen-sgid.c
+new file mode 100644
+index 0000000000..f1a2bce990
+--- /dev/null
++++ b/elf/tst-dlopen-sgid.c
+@@ -0,0 +1,104 @@
++/* Test case for ignored LD_LIBRARY_PATH in static startug (bug 32976).
++   Copyright (C) 2025 Free Software Foundation, Inc.
++   This file is part of the GNU C Library.
++
++   The GNU C Library is free software; you can redistribute it and/or
++   modify it under the terms of the GNU Lesser General Public
++   License as published by the Free Software Foundation; either
++   version 2.1 of the License, or (at your option) any later version.
++
++   The GNU C Library is distributed in the hope that it will be useful,
++   but WITHOUT ANY WARRANTY; without even the implied warranty of
++   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
++   Lesser General Public License for more details.
++
++   You should have received a copy of the GNU Lesser General Public
++   License along with the GNU C Library; if not, see
++   <https://www.gnu.org/licenses/>.  */
++
++#include <dlfcn.h>
++#include <gnu/lib-names.h>
++#include <stddef.h>
++#include <stdint.h>
++#include <stdlib.h>
++#include <string.h>
++#include <support/capture_subprocess.h>
++#include <support/check.h>
++#include <support/support.h>
++#include <support/temp_file.h>
++#include <unistd.h>
++
++/* This is the name of our test object.  Use a custom module for
++   testing, so that this object does not get picked up from the system
++   path.  */
++static const char dso_name[] = "tst-dlopen-sgid-mod.so";
++
++/* Used to mark the recursive invocation.  */
++static char magic_argument[] = "run-actual-test";
++
++static int
++do_test (void)
++{
++/* Pathname of the directory that receives the shared objects this
++   test attempts to load.  */
++  char *libdir = support_create_temp_directory ("tst-dlopen-sgid-");
++
++  /* This is supposed to be ignored and stripped.  */
++  TEST_COMPARE (setenv ("LD_LIBRARY_PATH", libdir, 1), 0);
++
++  /* Copy of libc.so.6.  */
++  {
++    char *from = xasprintf ("%s/%s", support_objdir_root, LIBC_SO);
++    char *to = xasprintf ("%s/%s", libdir, LIBC_SO);
++    add_temp_file (to);
++    support_copy_file (from, to);
++    free (to);
++    free (from);
++  }
++
++  /* Copy of the test object.   */
++  {
++    char *from = xasprintf ("%s/elf/%s", support_objdir_root, dso_name);
++    char *to = xasprintf ("%s/%s", libdir, dso_name);
++    add_temp_file (to);
++    support_copy_file (from, to);
++    free (to);
++    free (from);
++  }
++
++  TEST_COMPARE (support_capture_subprogram_self_sgid (magic_argument), 0);
++
++  free (libdir);
++
++  return 0;
++}
++
++static void
++alternative_main (int argc, char **argv)
++{
++  if (argc == 2 && strcmp (argv[1], magic_argument) == 0)
++    {
++      if (getgid () == getegid ())
++        /* This can happen if the file system is mounted nosuid.  */
++        FAIL_UNSUPPORTED ("SGID failed: GID and EGID match (%jd)\n",
++                          (intmax_t) getgid ());
++
++      /* Should be removed due to SGID.  */
++      TEST_COMPARE_STRING (getenv ("LD_LIBRARY_PATH"), NULL);
++
++      TEST_VERIFY (dlopen (dso_name, RTLD_NOW) == NULL);
++      {
++        const char *message = dlerror ();
++        TEST_COMPARE_STRING (message,
++                             "tst-dlopen-sgid-mod.so:"
++                             " cannot open shared object file:"
++                             " No such file or directory");
++      }
++
++      support_record_failure_barrier ();
++      exit (EXIT_SUCCESS);
++    }
++}
++
++#define PREPARE alternative_main
++#include <support/test-driver.c>
+-- 
+2.25.1
+
diff --git a/meta-rz-common/recipes-core/glibc/glibc_2.31.bbappend b/meta-rz-common/recipes-core/glibc/glibc_2.31.bbappend
new file mode 100644
index 00000000..d9482867
--- /dev/null
+++ b/meta-rz-common/recipes-core/glibc/glibc_2.31.bbappend
@@ -0,0 +1,6 @@
+FILESEXTRAPATHS_prepend := "${THISDIR}/glibc:"
+
+SRC_URI += " \
+    file://0001-elf-Ignore-LD_LIBRARY_PATH-and-debug-env-var-for-set.patch \
+    file://0002-elf-Test-case-for-bug-32976-CVE-2025-4802.patch \
+"
diff --git a/meta-rz-common/recipes-debian/bullseye/sources/glibc.inc b/meta-rz-common/recipes-debian/bullseye/sources/glibc.inc
index 3983f2b9..efd5f805 100644
--- a/meta-rz-common/recipes-debian/bullseye/sources/glibc.inc
+++ b/meta-rz-common/recipes-debian/bullseye/sources/glibc.inc
@@ -1,19 +1,19 @@
 # This is generated by debian-source.bbclass
-DPV = "2.31-13+deb11u4"
+DPV = "2.31-13+deb11u13"
 DPV_EPOCH = ""
 REPACK_PV = "2.31"
 PV = "2.31"
 
 DEBIAN_SRC_URI = " \
-    ${DEBIAN_MIRROR}/main/g/glibc/glibc_2.31-13+deb11u4.dsc;name=glibc_2.31-13+deb11u4.dsc \
-    ${DEBIAN_MIRROR}/main/g/glibc/glibc_2.31.orig.tar.xz;name=glibc_2.31.orig.tar.xz \
-    ${DEBIAN_MIRROR}/main/g/glibc/glibc_2.31-13+deb11u4.debian.tar.xz;name=glibc_2.31-13+deb11u4.debian.tar.xz \
+    ${DEBIAN_SECURITY_UPDATE_MIRROR}/main/g/glibc/glibc_2.31-13+deb11u13.dsc;name=glibc_2.31-13+deb11u13.dsc \
+    ${DEBIAN_SECURITY_UPDATE_MIRROR}/main/g/glibc/glibc_2.31.orig.tar.xz;name=glibc_2.31.orig.tar.xz \
+    ${DEBIAN_SECURITY_UPDATE_MIRROR}/main/g/glibc/glibc_2.31-13+deb11u13.debian.tar.xz;name=glibc_2.31-13+deb11u13.debian.tar.xz \
 "
 
-SRC_URI[glibc_2.31-13+deb11u4.dsc.md5sum] = "76ad7348971917d9557e2f43aa027615"
+SRC_URI[glibc_2.31-13+deb11u13.dsc.md5sum] = "a36fd2286dd00064868e4f32061061e9"
 SRC_URI[glibc_2.31.orig.tar.xz.md5sum] = "b4cd4b8bb35536d6119ba5314662942c"
-SRC_URI[glibc_2.31-13+deb11u4.debian.tar.xz.md5sum] = "28e888c67441ed231d3a6757d14276a6"
+SRC_URI[glibc_2.31-13+deb11u13.debian.tar.xz.md5sum] = "8df5a9964244b4bf4fb7640377e19306"
 
-SRC_URI[glibc_2.31-13+deb11u4.dsc.sha256sum] = "2591bbb14fbf3f7490b3d67775601f991cfff721db3bc7bb0bf311165540fdaf"
+SRC_URI[glibc_2.31-13+deb11u13.dsc.sha256sum] = "c32a130c8e4fc140cd1f3376a972a4d058074b6f8e778813387b5446a26f4334"
 SRC_URI[glibc_2.31.orig.tar.xz.sha256sum] = "3dc7704b6166839c37d7047626fd199f3d4c09aca0d90e48c51c31c967dce34e"
-SRC_URI[glibc_2.31-13+deb11u4.debian.tar.xz.sha256sum] = "0913d214e3c213d4e148b39fd7a1289dd3612799ec97fb55e1a77f8b6108cf76"
+SRC_URI[glibc_2.31-13+deb11u13.debian.tar.xz.sha256sum] = "e0be307cc8dc1538e2664aae71f5e3d2e0d7c40ff547c997523c591228cc7eda"
diff --git a/meta-rz-common/recipes-debian/buster/sources/glibc.inc b/meta-rz-common/recipes-debian/buster/sources/glibc.inc
index ef6920e0..cf5bf88d 100644
--- a/meta-rz-common/recipes-debian/buster/sources/glibc.inc
+++ b/meta-rz-common/recipes-debian/buster/sources/glibc.inc
@@ -1,19 +1,19 @@
 # This is generated by debian-source.bbclass
-DPV = "2.28-10+deb10u4"
+DPV = "2.28-10+deb10u5"
 DPV_EPOCH = ""
 REPACK_PV = "2.28"
 PV = "2.28"
 
 DEBIAN_SRC_URI = " \
-    ${DEBIAN_SECURITY_UPDATE_MIRROR}/main/g/glibc/glibc_2.28-10+deb10u4.dsc;name=glibc_2.28-10+deb10u4.dsc \
-    ${DEBIAN_SECURITY_UPDATE_MIRROR}/main/g/glibc/glibc_2.28.orig.tar.xz;name=glibc_2.28.orig.tar.xz \
-    ${DEBIAN_SECURITY_UPDATE_MIRROR}/main/g/glibc/glibc_2.28-10+deb10u4.debian.tar.xz;name=glibc_2.28-10+deb10u4.debian.tar.xz \
+    ${DEBIAN_ELTS_MIRROR}/main/g/glibc/glibc_2.28-10+deb10u5.dsc;name=glibc_2.28-10+deb10u5.dsc \
+    ${DEBIAN_ELTS_MIRROR}/main/g/glibc/glibc_2.28.orig.tar.xz;name=glibc_2.28.orig.tar.xz \
+    ${DEBIAN_ELTS_MIRROR}/main/g/glibc/glibc_2.28-10+deb10u5.debian.tar.xz;name=glibc_2.28-10+deb10u5.debian.tar.xz \
 "
 
-SRC_URI[glibc_2.28-10+deb10u4.dsc.md5sum] = "b39dd7f7f54c6b7da3eefcd391470af2"
+SRC_URI[glibc_2.28-10+deb10u5.dsc.md5sum] = "eb00708ec20c79118242d49aaf0a7327"
 SRC_URI[glibc_2.28.orig.tar.xz.md5sum] = "2d78d5b080fbe4fefa2e1ccef9c39dbc"
-SRC_URI[glibc_2.28-10+deb10u4.debian.tar.xz.md5sum] = "8ebb6ee80ba6a5e39eacc31c95994ef0"
+SRC_URI[glibc_2.28-10+deb10u5.debian.tar.xz.md5sum] = "9335962580bdab99b88ce1a7e5cf657c"
 
-SRC_URI[glibc_2.28-10+deb10u4.dsc.sha256sum] = "55e4ebd9a55755c84d42709b23f9b269f46b6a76f5040a0e05cfd323ba67f8af"
+SRC_URI[glibc_2.28-10+deb10u5.dsc.sha256sum] = "c7c8cf7b982ca41914e14d84d5e94d306889d9be190c98bbbd446bf1079ff7af"
 SRC_URI[glibc_2.28.orig.tar.xz.sha256sum] = "53d3c1c7bff0fb25d4c7874bf13435dc44a71fd7dd5ffc9bfdcb513cdfc36854"
-SRC_URI[glibc_2.28-10+deb10u4.debian.tar.xz.sha256sum] = "dc287870d4b8cb5d1d175fa9b95e3a97d6b68699680b443ae7b2a1b89f0fe8fc"
+SRC_URI[glibc_2.28-10+deb10u5.debian.tar.xz.sha256sum] = "95ea19577200cc94374ff4741e4853bab921f530d1d9f929d82c9f7be82867e8"
